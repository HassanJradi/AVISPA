%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role mobile_node (MN,VMAG,VAuS,HAuS : agent, X,Y : symmetric_key, H : hash_func, SND,RCV : channel(dy))
	
	played_by MN

	def=

		local	
			State, HNP, T1, T2, T3, T4, N : nat,
            		HK, VX, VY, VHK : symmetric_key,
			AuthRqst, RoamingAuthResp, RtrSol, RtrAdv : message,
			MIC1, MIC2, MIC3, MIC4 : message

		init	
			State := 0

		transition

			0.	State	= 0 /\ RCV(start) =|>
				State' := 1 /\ T1':= new()
                            				/\ HK' := xor(H(X),H(Y))
                            				/\ MIC1':= H(MN.HAuS.T1'.HK')
                            				/\ SND(AuthRqst.MN.HAuS.T1'.MIC1') 
                            				/\ secret(X,sec_x,{MN,HAuS})
                            				/\ secret(Y,sec_y,{MN,HAuS})
                            				/\ secret(HK,sec_hk,{MN,HAuS})
                            				/\ witness(MN,HAuS,auth_haus_mn,HK)

			1.	State	= 1 /\ RCV(RoamingAuthResp.VAuS'.MN.N'.T2'.MIC2') /\ MIC2'=H(MN.N'.T2'.HK) =|>
				State' := 2 /\ VX':= H(xor(X,N')) /\ VY':= H(xor(Y,N')) 
                        				/\ VHK':= xor(H(VX'),H(VY'))
							/\ T3':= new()
        			       			/\ MIC3':= H(MN.T3'.VHK)
							/\ SND(RtrSol.MN.T3'.MIC3')
                            				/\ secret(VX,sec_vx,{MN,HAuS,VAuS}) 
                            				/\ secret(VY,sec_vy,{MN,HAuS,VAuS})
                            				/\ secret(VHK,sec_vhk,{MN,VMAG,VAuS})
                            				/\ request(MN,HAuS,auth_mn_haus,HK)
							/\ witness(MN,VMAG,auth_vmag_mn,VHK)

			2.	State	= 2 /\ RCV(RtrAdv.MN.HNP'.T4'.MIC4') /\ MIC4'=H(MN.HNP'.T4'.VHK) =|>
				State' := 3 /\ request(MN,VMAG,auth_mn_vmag,VHK)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role media_access_gateway (MN,VMAG,VAuS : agent, SK1 : symmetric_key, H : hash_func, SND,RCV : channel(dy))
			
	played_by VMAG

	def= 
	
		local 	
			State, HNP, T3, T4 : nat,
			VHK : symmetric_key,
			AttachVerifier, RtrSol, PBU, PBA, RtrAdv, AuthSucc : message,
			MIC3, MIC4 : message

		init
			State  := 0

		transition

			0.	State	= 0 /\ RCV(AttachVerifier.{VHK'}_SK1) =|>
				State' := 1

			1.	State	= 1 /\ RCV(RtrSol.MN.T3'.MIC3') /\ MIC3'=H(MN.T3'.VHK) =|>
				State' := 2 /\ SND(PBU.MN)

			2.	State	= 2 /\ RCV(PBA.MN) =|>
				State' := 3 /\ HNP' := new()
				 			/\ T4' := new()
                            				/\ MIC4' := H(MN.HNP'.T4'.VHK)
						    	/\ SND(RtrAdv.MN.HNP'.T4'.MIC4')
						    	/\ SND(AuthSucc.MN)
						    	/\ witness(VMAG,MN,auth_mn_vmag,VHK)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role visited_authentication_server (MN,VMAG,VAuS,HAuS : agent, SK1,SK2 : symmetric_key, H : hash_func, SND,RCV : channel(dy))
			
	played_by VAuS 

	def=

		local		
			State, T1, T2, N : nat,
			VX, VY, VHK : symmetric_key,
			AuthRqst, AttachEvent, AttachVerifier, RoamingAuthResp : message,
			MIC1, MIC2 : message
			
		init	
			State := 0

		transition

			0.	State	= 0 /\ RCV(AuthRqst.MN.HAuS.T1'.MIC1') =|>
				State' := 1 /\ SND(AuthRqst.MN.T1'.MIC1')
			
			1.	State	= 1 /\ RCV(RoamingAuthResp.MN.{VX'.VY'}_SK2.N'.T2'.MIC2') =|>		
				State' := 2 /\ VHK':= xor(H(VX'),H(VY'))
                            				/\ SND(RoamingAuthResp.VAuS.MN.N'.T2'.MIC2')
							/\ SND(AttachVerifier.MN.{VHK'}_SK1)
						    	/\ secret(VX,sec_vx,{VAuS,HAuS})
						    	/\ secret(VY,sec_vy,{VAuS,HAuS})
						    	/\ secret(VHK,sec_vhk,{MN,VAuS})

			2.	State	= 2 /\ RCV(AttachEvent.MN) =|>
				State' := 3 /\ SND(AttachVerifier.{VHK}_SK1)

end role	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role home_authentication_server (MN,VAuS,HAuS : agent, SK2,X,Y : symmetric_key, H : hash_func, SND,RCV : channel(dy))
			
	played_by HAuS 

	def=

		local		
			State, T1, T2, N : nat,
			HK, VX, VY : symmetric_key,
			AuthRqst, RoamingAuthResp, AuthSucc : message,
			MIC1, MIC2 : message
			
		init	
			State := 0

		transition
			
			0.	State	= 0 /\ RCV(AuthRqst.MN.T1'.MIC1') /\ MIC1'=H(MN.HAuS.T1'.xor(H(X),H(Y))) =|>					
				State' := 1 /\ N' := new()
                            				/\ HK' := xor(H(X),H(Y))
                            				/\ T2' := new()
                            				/\ VX':= H(xor(X,N')) /\ VY':= H(xor(Y,N'))
                            				/\ MIC2':= H(MN.N'.T2'.HK')
                            				/\ SND(RoamingAuthResp.MN.{VX'.VY'}_SK2.N'.T2'.MIC2')
                            				/\ secret(X,sec_x,{MN,HAuS})
                            				/\ secret(Y,sec_y,{MN,HAuS})
                            				/\ secret(HK,sec_hk,{MN,HAuS})
                            				/\ request(HAuS,MN,auth_haus_mn,HK)
                            				/\ witness(HAuS,MN,auth_mn_haus,HK)
                            				/\ secret(VX,sec_vx,{VAuS,HAuS})
                            				/\ secret(VY,sec_vy,{VAuS,HAuS})

			1.	State	= 1 /\ RCV(AuthSucc.MN) =|>
				State' := 2 
				
end role	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role local_mobility_anchor (MN,VMAG,VLMA : agent, SND,RCV : channel(dy))
			
	played_by VLMA

	def= 
	
		local 	
			State : nat,
			PBU, PBA : message

		init
			State  := 0

		transition

			0.	State	= 0 /\ RCV(PBU.MN) =|>
				State' := 1 /\ SND(PBA.MN)

				
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role session (MN,VMAG,VAuS,HAuS,VLMA : agent, SK1,SK2,X,Y : symmetric_key, H : hash_func, SND,RCV : channel(dy))

	def=

		composition	
			mobile_node(MN,VMAG,VAuS,HAuS,X,Y,H,SND,RCV)
			/\
			media_access_gateway(MN,VMAG,VAuS,SK1,H,SND,RCV)
			/\
			visited_authentication_server(MN,VMAG,VAuS,HAuS,SK1,SK2,H,SND,RCV)
			/\
			home_authentication_server(MN,VAuS,HAuS,SK2,X,Y,H,SND,RCV)
			/\
			local_mobility_anchor(MN,VMAG,VLMA,SND,RCV)
		
end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role enviroment() 

	def=

		const	
			mn,vmag,vaus,haus,vlma : agent,
			h : hash_func,
			sk1,sk2,x,y : symmetric_key,
			snd,rcv	: channel(dy),
			
			sec_sk1, sec_sk2, sec_x, sec_y, sec_hk, sec_vx, sec_vhk, sec_vy : protocol_id,
			auth_haus_mn, auth_mn_haus, auth_vmag_mn, auth_mn_vmag : protocol_id

		intruder_knowledge = {mn,vmag,vaus,haus,vlma,h,i}

		composition
			session(mn,vmag,vaus,haus,vlma,sk1,sk2,x,y,h,snd,rcv)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal
	secrecy_of sec_x
	secrecy_of sec_y
	secrecy_of sec_hk
	secrecy_of sec_vx
	secrecy_of sec_vy
	secrecy_of sec_vhk

	authentication_on auth_haus_mn
	authentication_on auth_mn_haus
	authentication_on auth_vmag_mn
	authentication_on auth_mn_vmag

end goal

enviroment()

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
